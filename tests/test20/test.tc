from std.io import println
from std.unit.test import TestUnit, UnitSet

namespace tesla {
    type SomeClass = class {
        let static value: u32
        let static const value2: u32
        
        static {
            SomeClass.value = 1
            println("Hello, Static Block!")
            SomeClass.value2 = 20 // immutabe
        }

        fn init() {
            println("Hello, Class Instance!".cat(SomeClass.value))
            SomeClass.value += 1
        }

        fn getStaticValue() -> u32 {
            return SomeClass.value
        }

        static fn printr<T>(value: T) {
            println(""+value)
        }
    }

    type SomeOtherClass<T> = class {
        let v: T
        let static const value: T

        static {
            SomeOtherClass.value = 10
        }

        fn init(v: T) {
            this.v = v
        }
    }
}

fn test_static_initialization(rn: TestUnit) {
    // Ensure static block is executed and initializes correctly
    rn.assert_eq(tesla.SomeClass.value, 1)
}

fn test_static_increment(rn: TestUnit) {
    // Create instances of SomeClass and test static value increment
    let instance_a = new tesla.SomeClass()
    rn.assert_eq(tesla.SomeClass.value, 2)

    let instance_b = new tesla.SomeClass()
    rn.assert_eq(tesla.SomeClass.value, 3)

    let instance_c = new tesla.SomeClass()
    rn.assert_eq(tesla.SomeClass.value, 4)
}

fn test_static_consistency(rn: TestUnit) {
    // Create an instance and check if static value remains consistent
    let instance = new tesla.SomeClass()
    rn.assert_eq(instance.getStaticValue(), tesla.SomeClass.value)
}

fn main() -> u32 {
    let test_1 = new TestUnit("test static initialization", "Tests static block initialization", test_static_initialization)
    let test_2 = new TestUnit("test static increment", "Tests increment behavior of static attribute", test_static_increment)
    let test_3 = new TestUnit("test static consistency", "Tests consistency of static value access from instance", test_static_consistency)

    let set = new UnitSet("Static Class Feature Test Suite", "Tests for static class attributes and methods", [test_1, test_2, test_3])

    return set.run()
}
