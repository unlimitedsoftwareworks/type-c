
/*
from std.string import String
from std.io import println
from std.unit.test import TestUnit, UnitSet
*/

let l1: lock<u32> = new lock(0)

fn f1() -> i32 {
    let z: i32 = 1

    return z
}


fn f2() -> u64 {
    let z: u64 = 1

    return z
}

let thread1 = spawn f1()
thread1.then(fn(x: i32) {
    f2()
    return
})
/*.then(fn(x: u64)  {
    return spawn f1()
}).then<void>(fn(x: i32) {
    return
})*/

let l: lock<u32> = new lock(0)

let z: u32 = await l.request()

l.withLock( fn(x: u32) {
    return spawn f1()  
}).then(fn(x: i32) {
    return
})