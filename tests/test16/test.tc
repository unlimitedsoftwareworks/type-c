

type ConcreteUserData<T> = class {
    let age: T

    fn init(v: T) {
        this.age = v
    }

    fn cool() -> T[] {
        return [this.age, this.age+1]
    }
}

let cud = new ConcreteUserData<u32>()

let cud2 = new ConcreteUserData<u32>()

let z = [cud.cool(), cud2.cool()]




type HttpResponse = variant {
    Success(code: u32, time: f32),
    Error(buffer: u8[], code: u32)
}


let r1 = HttpResponse.Success(200, 0.5f)
let r2 = HttpResponse.Error([1, 2, 3], 404)

let r1: HttpResponse = HttpResponse.Success(200, 0.5f)