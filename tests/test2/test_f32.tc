from std.unit.test import TestUnit

fn test_f32_operations(runner: TestUnit) {
    // Declare variables for all types
    let v_f32: f32 = 9.0f
    let v_u8: u8 = 1
    let v_u16: u16 = 2
    let v_u32: u32 = 3
    let v_u64: u64 = 4
    let v_i8: i8 = 5
    let v_i16: i16 = 6
    let v_i32: i32 = 7
    let v_i64: i64 = 8
    let v_f64: f64 = 10.0
    // Comparison Operations
    runner.assert_eq<bool>(v_f32 == v_f32, true)     // f32 == f32
    runner.assert_eq<bool>(v_f32 != v_f32, false)    // f32 != f32
    runner.assert_eq<bool>(v_f32 > v_u8 as f32, true) // f32 > u8
    runner.assert_eq<bool>(v_f32 < v_u16 as f32, false) // f32 < u16
    runner.assert_eq<bool>(v_f32 >= v_u32 as f32, true) // f32 >= u32
    runner.assert_eq<bool>(v_f32 <= v_i8 as f32, false) // f32 <= i8

    // Logical Operations
    runner.assert_eq<bool>((v_f32 > 0.0f) && (v_f32 < 20.0f), true)  // Logical AND
    runner.assert_eq<bool>((v_f32 < 0.0f) || (v_f32 > 0.0f), true)   // Logical OR
    runner.assert_eq<bool>(!(v_f32 > 20.0f), true)                 // Logical NOT
}